generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SOW {
  id                      String    @id @default(cuid())
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  companyLogo             String
  clientName              String
  sowTitle                String
  clientTitle             String
  clientEmail             String
  signatureDate           DateTime
  projectDescription      String
  deliverables            String
  startDate               DateTime
  duration                String
  clientRoles             Json
  pricingRoles            Json
  billingInfo             Json
  accessRequirements      String
  travelRequirements      String
  workingHours            String
  testingResponsibilities String
  addendums               Json
  isLatest                Boolean   @default(true)
  parentId                String?
  version                 Int       @default(1)
  leandataEmail           String    @default("agam.vasani@leandata.com")
  leandataName            String    @default("Agam Vasani")
  leandataTitle           String    @default("VP Customer Success")
  clientSignerName        String    @default("")
  content                 String
  status                  String    @default("draft")
  title                   String
  
  // Salesforce Opportunity Information
  opportunityId           String?
  opportunityName         String?
  opportunityAmount       Float?
  opportunityStage        String?
  opportunityCloseDate    DateTime?
  comments                Comment[]
  parent                  SOW?      @relation("SOWVersions", fields: [parentId], references: [id])
  versions                SOW[]     @relation("SOWVersions")
}

model Comment {
  id        String    @id @default(cuid())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sowId     String
  userId    String
  parentId  String?
  parent    Comment?  @relation("CommentToComment", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentToComment")
  sow       SOW       @relation(fields: [sowId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  name     String?
  role     String    @default("user")
  comments Comment[]
}

model SalesforceConfig {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  username      String
  password      String   // Encrypted in production
  securityToken String?
  loginUrl      String   @default("https://login.salesforce.com")
  isActive      Boolean  @default(true)
  lastTested    DateTime?
  lastError     String?
}

model LeanDataSignator {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String   @unique
  title     String
  isActive  Boolean  @default(true)
}

model AvomaConfig {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  apiKey      String   // Encrypted in production
  apiUrl      String   @default("https://api.avoma.com")
  isActive    Boolean  @default(true)
  lastTested  DateTime?
  lastError   String?
  customerId  String?  // Avoma customer ID if needed
}
